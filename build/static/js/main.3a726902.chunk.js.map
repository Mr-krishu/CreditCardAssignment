{"version":3,"sources":["Components/creditCard/index.js","utils/cardTypes.js","Components/creditForm/index.js","App.js","reportWebVitals.js","index.js"],"names":["CreditCard","cardState","imageTag","cardType","cardNum","payCardType","regexMap","regEx","j","length","match","indexOf","i","split","d","c","parseInt","f","substr","getCardType","cardNumber","replace","image","getCard","cvv","document","getElementsByClassName","style","transform","transition","transformStyle","maskCard","cardnumber","first4","substring","last5","className","backgroundImage","src","alt","activeElement","name","cardName","month","year","monthArray","CreditForm","useState","setCardState","yearArray","setYearArray","number","setNumber","error","setError","errorMessage","useEffect","currentYear","Date","getFullYear","temArray","console","log","push","toString","handleChange","e","str","target","test","value","getElementById","setAttribute","TextField","variant","onChange","FormControl","Select","defaultValue","map","item","id","Button","onClick","alert","window","location","reload","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a726902.chunk.js","sourcesContent":["import React from \"react\";\nimport { getCardType } from \"../../utils/cardTypes\";\nimport \"../Style.css\";\n\nexport const CreditCard = ({ cardState }) => {\n\n  const getCard = () => {\n    let cardType =  getCardType(cardState.cardNumber.replace(/\\s/g, ''));\n    let image = \"./images/discover.png\";\n    if (cardType) {\n      switch(cardType) {\n        case \"VISA\" : \n          image = \"./images/visa.png\";\n          break;\n        case \"MASTERCARD\":\n          image = \"./images/mastercard.png\";\n          break;\n        case \"AMEX\":\n          image = \"./images/amex.png\";\n          break;\n        case \"MAESTRO\":\n          image = \"./images/maestro.png\";\n          break;\n        default:\n      }\n    }\n    return image;\n  }\n\n  let imageTag = getCard();\n  if (cardState.cvv && document.getElementsByClassName(\"cvvclass\")[0] ) {\n    document.getElementsByClassName(\"cardContainerContent\")[0].style.transform = \"rotateY(180deg)\";\n    document.getElementsByClassName(\"cardContainerContent\")[0].style.transition = \"transform 0.6s\";\n    document.getElementsByClassName(\"cardContainerContent\")[0].style.transformStyle = \"preserve-3d\";\n  }\n  let maskCard = cardState.cardNumber;\n  if (cardState.cardNumber.length > 16) {\n    var cardnumber = cardState.cardNumber;\n    var first4 = cardnumber.substring(0, 4);\n    var last5 = cardnumber.substring(cardnumber.length - 5);\n  \n    let mask = cardnumber.substring(4, cardnumber.length - 5).replace(/\\d/g,\"*\");\n    maskCard = first4 + mask + last5;\n  }\n\n  return (\n    <div className=\"cardContainer\">\n      <div className=\"cardContainerContent\" style={{  backgroundImage: `url('./images/6.jpeg')` }}>\n        {/* <img src=\"./images/2.jpeg\" className=\"cardImg\" /> */}\n        <div className=\"cardSubContainer flip-card-front\">\n          <div className=\"cardheadercontainer\">\n            <div className=\"cardChip\">\n              <img src=\"./images/chip.png\" alt=\"chip\" />\n            </div>\n            <div className=\"cardType\">\n              <img src={imageTag} alt=\"cardType\" />\n            </div>\n          </div>\n          <div className={`cardNumber ${\n              document && document.activeElement.name === \"cardNumber\"\n                ? \"activeCard\"\n                : \"cardNumber\"\n            }`}\n>\n            <div >{maskCard || `#### #### #### ####`}</div>\n          </div>\n          <div className=\"cardBottomcontainer\">\n            <div className=\"cardHolderName\">\n              <div className=\"cardHead\">Card Holder</div>\n              <div className={`cardHoldName ${\n                  document && document.activeElement.name === \"cardName\"\n                    ? \"activeCard\"\n                    : \"\"\n                }`}>{cardState.cardName || `Full Name`}</div>\n            </div>\n            <div className={`cardExpires ${\n                  document &&\n                  (document.activeElement.name === \"year\" ||\n                    document.activeElement.name === \"month\")\n                    ? \"activeCard\"\n                    : \"\"\n                }`}>\n              <div className=\"cardHead\">Expires</div>\n              <div className={`cardHoldName`}>{`${cardState.month} / ${cardState.year?.substring(2,4)}`}</div>\n            </div>\n            <div>\n            </div>\n          </div>\n        </div>\n        <div className=\"cardSubContainer flip-card-back\">\n        <div className=\"blacks\">\n    <div className=\"blackstrip\"></div>\n    </div>\n          <div className=\"cvvcvv\">CVV</div>\n          <div className=\"cardNumberCVV\">\n            <div>{cardState.cvv.replace(/\\d/g, \"*\")}</div>\n          </div>\n          <div className=\"cardTypeCVV\">\n            <img src={imageTag} alt=\"cardType\" />\n          </div> \n        </div>\n      </div>\n    </div>\n  );\n};\n","export const DEFAULT_CVC_LENGTH = 3\nexport const DEFAULT_ZIP_LENGTH = 5\nexport const DEFAULT_CARD_FORMAT = /(\\d{1,4})/g\nexport const CARD_TYPES = {\n  amex: {\n    name: 'Amex',\n    color: 'green'\n  },\n  visa: {\n    name: 'Visa',\n    color: 'lime'\n  },\n  diners: {\n    name: 'Diners',\n    color: 'orange'\n  },\n  discover: {\n    name: 'Discover',\n    color: 'purple'\n  },\n  jcb: {\n    name: 'Jcb',\n    color: 'red'\n  },\n  jcb15: {\n    name: 'Jcb',\n    color: 'red'\n  },\n  maestro: {\n    name: 'Maestro',\n    color: 'yellow'\n  },\n  mastercard: {\n    name: 'Mastercard',\n    color: 'lightblue'\n  },\n  unionpay: {\n    name: 'Unipay',\n    color: 'cyan'\n  }\n}\n\nexport const getCardType = (cardNum) => {\n\n    var payCardType = \"\";\n    var regexMap = [\n      {regEx: /^4[0-9]{5}/ig,cardType: \"VISA\"},\n      {regEx: /^5[1-5][0-9]{4}/ig,cardType: \"MASTERCARD\"},\n      {regEx: /^3[47][0-9]{3}/ig,cardType: \"AMEX\"},\n      {regEx: /^(5[06-8]\\d{4}|6\\d{5})/ig,cardType: \"MAESTRO\"}\n    ];\n    \n    for (var j = 0; j < regexMap.length; j++) {\n      if (cardNum.match(regexMap[j].regEx)) {\n        payCardType = regexMap[j].cardType;\n        break;\n      }\n    }\n\n    if (cardNum.indexOf(\"50\") === 0 || cardNum.indexOf(\"60\") === 0 || cardNum.indexOf(\"65\") === 0) {\n      var g = \"508500-508999|606985-607984|608001-608500|652150-653149\";\n      var i = g.split(\"|\");\n      for (var d = 0; d < i.length; d++) {\n        var c = parseInt(i[d].split(\"-\")[0], 10);\n        var f = parseInt(i[d].split(\"-\")[1], 10);\n        if ((cardNum.substr(0, 6) >= c && cardNum.substr(0, 6) <= f) && cardNum.length >= 6) {\n         payCardType = \"RUPAY\";\n          break;\n        }\n      }\n    }\n    return payCardType;\n  \n}","import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Button } from \"@material-ui/core\";\nimport { CreditCard } from \"../creditCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst monthArray = [\n  \"01\",\n  \"02\",\n  \"03\",\n  \"04\",\n  \"05\",\n  \"06\",\n  \"07\",\n  \"08\",\n  \"09\",\n  \"10\",\n  \"11\",\n  \"12\",\n];\n\n\n\nexport const CreditForm = () => {\n  \n  const [cardState, setCardState] = useState({\n    cardNumber: \"\",\n    cardName: \"\",\n    cvv: \"\",\n    year: \"YYYY\",\n    month: \"MM\",\n  });\n  const [yearArray, setYearArray] = useState([]);\n  const [number, setNumber] = useState(\"\");\n  const [error, setError] = useState(false);\n  let errorMessage = \"\";\n\n  useEffect(() => {\n    let currentYear = new Date().getFullYear();\n    let temArray = [];\n    for (let i = 1950; i <= currentYear; i++) {\n      console.log(i);\n      temArray.push(i.toString());\n      setYearArray(temArray);\n    }\n  }, []);\n  \n\n  const handleSubmit = () => {\n    const { cardNumber, cardName, cvv, year, month } = cardState;\n    if (!cardNumber || !cardName || !cvv || !year || !month) {\n      alert(\"Please fill all the fields\");\n      setError(true);\n    } else {\n      alert(\"Data entered successfully!\");\n      window.location.reload();\n      setError(false);\n    }\n  };\n  \n  const { cardNumber, cardName, cvv, year, month } = cardState;\n  if (error) {\n    errorMessage = \"All fields are mandatory!\";\n  } else if (cardNumber && cardName && cvv && year && month) {\n    errorMessage = \"\";\n  }\n\n  const handleChange = (e) => {\n    let str = cardState.cardNumber.replace(/\\s/g, \"\");\n    if (\n      (e.target.name === \"cardNumber\" &&\n        (/^[A-Za-z]+$/.test(e.target.value) ||\n          e.target.value?.replace(/\\s/g, \"\")?.length > 16)) ||\n      (e.target.value.length > 3 && e.target.name === \"cvv\")\n    ) {\n      return;\n    }\n\n    if (\n      e.target.name === \"cardNumber\" &&\n      str.length < 15 &&\n      number.length < 19\n    ) {\n      if (e.target.value?.replace(/\\s/g, \"\")?.length % 4 === 0) {\n        e.target.value += \" \";\n      }\n    }\n    if (number.length < 19) {\n      setNumber(e.target.value);\n    }\n    setCardState({ ...cardState, [e.target.name]: e.target.value });\n    if (cardState.cardNumber === \"\") {\n      setNumber(\"\");\n    }\n  };\n\n\n\n\n\n\n  if (document && document.activeElement.name === \"cvv\") {\n    let ccID = document.getElementById(\"cvv\");\n    ccID.setAttribute(\"class\", \"cvvclass\");\n  }\n  return (\n    <>\n      <div className=\"formContainer\">\n        <div>\n          <CreditCard cardState={cardState} />\n        </div>\n        <div className=\"formSubContainer\">\n          {errorMessage ? <p className=\"error\">{errorMessage}</p> : null}\n          <div className=\"customField\">\n            <div className=\"formheader\">Card Number</div>\n            <TextField\n              variant=\"outlined\"\n              className=\"field\"\n              name=\"cardNumber\"\n              value={cardState.cardNumber}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"customField\">\n            <div className=\"formheader\">Card Name</div>\n            <TextField\n            \n              variant=\"outlined\"\n              className=\"field\"\n              name=\"cardName\"\n              value={cardState.cardName}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"datefieldContainer\">\n            <div className=\"datefield\">\n              <div className=\"formheader\">Month</div>\n              <FormControl variant=\"outlined\">\n                <Select\n                defaultValue=\"Month\"\n                  onChange={handleChange}\n                  className=\"select\"\n                  value={cardState.month}\n                  name=\"month\"\n                >\n                  {monthArray.map((item) => (\n                    <option value={item}>{item}</option>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div className=\"datefield\">\n              <div className=\"formheader\">Year</div>\n              <FormControl variant=\"outlined\">\n                <Select\n                \n                  onChange={handleChange}\n                  className=\"select\"\n                  value={cardState.year}\n                  name=\"year\"\n                >\n                  {yearArray.length > 0 &&\n                    yearArray.map((item) => (\n                      <option value={item}>{item}</option>\n                    ))}\n                </Select>\n              </FormControl>\n            </div>\n            <div className=\"datefield\">\n              <div className=\"formheader\">CVV</div>\n              <TextField\n                id=\"cvv\"\n                variant=\"outlined\"\n                className=\"field cvvfield\"\n                name=\"cvv\"\n                value={cardState.cvv}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div>\n            <Button className=\"submitButton\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.css';\nimport { CreditForm } from './Components/creditForm';\n\nfunction App() {\n  return (\n    <>\n      <CreditForm />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}